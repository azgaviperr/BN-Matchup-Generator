name: Release Binaries on Tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          python build.py

      - name: Rename binary
        shell: bash
        run: |
          os_name="${{ runner.os }}"
          prefix=""
          ext=""
          if [[ "$os_name" == "Linux" ]]; then
            prefix="Linux-"
            ext=""
          elif [[ "$os_name" == "Windows" ]]; then
            prefix="Windows-"
            ext=".exe"
          elif [[ "$os_name" == "macOS" ]]; then
            prefix="macOS-"
            ext=""
          fi

          # Find the executable file inside the dist folder and rename it
          # Assumes the executable is the only file in 'dist/' or a subfolder.
          for file in dist/*; do
            if [[ -f "$file" ]]; then
              filename=$(basename "$file")
              dirname=$(dirname "$file")
              mv "$file" "$dirname/${prefix}${filename}"
            fi
          done

      - name: Zip binaries (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path dist/* -DestinationPath ${{ runner.os }}-binaries.zip
      
      - name: Zip binaries (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          zip -r ${{ runner.os }}-binaries.zip dist/
      
      - name: Upload zipped binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: ${{ runner.os }}-binaries.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}