name: Release Binaries on Tag

on:
  push:
    tags:
      - '*'
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          python build.py

      - name: Prepare binaries for release
        run: |
          mkdir -p release
          cp dist/** release/ 2>nul || :
        shell: bash

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: release/**

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./artifacts/**/*.exe,./artifacts/**/*.app,./artifacts/**/*.bin,./artifacts/**/*.sh,./artifacts/**/*.py,./artifacts/**/*.zip,./artifacts/**/*.tar.gz,./artifacts/**/*.dmg,./artifacts/**/*.pkg,./artifacts/**/*.deb,./artifacts/**/*.rpm,./artifacts/**/*.run,./artifacts/**/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
